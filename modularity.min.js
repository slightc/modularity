function Modularity() { var n = {}, r = {}; function t(t, o) { o(function o(c) { n[t] = c; var e = r[t];
r[t] = void 0, e && e.forEach(n => { n() }) }) } return { wait: function t(o, c) { for (var e = 0; e < o.length;
e++) { var a = o[e]; if (void 0 == n[a]) { r[a] = r[a] || [], r[a].push(function () { t(o, c) }); return } }
c(o.map(function (r) { return n[r] })) }, add: t, addSrc: function n(r, o, c) { var e = "", a = !0, i = !1;
"string" == typeof o ? e = o : "object" == typeof o && (e = o.src, void 0 != o.async && (a = o.async), void 0
!= o.defer && (i = o.defer)); var f = document.createElement("script"); f.src = e, f.async = a, f.defer = i,
f.onload = function () { t(r, function (n) { c ? c(n, f) : n(window[r]) }) }, document.head.append(f) } } }
